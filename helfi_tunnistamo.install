<?php

/**
 * @file
 * Contains installation tasks for 'helfi_tunnistamo' module.
 */

declare(strict_types=1);

use Drupal\user\Entity\User;

/**
 * Implements hook_install().
 */
function helfi_tunnistamo_install() : void {
  \Drupal::configFactory()
    ->getEditable('openid_connect.settings')
    ->set('override_registration_settings', TRUE)
    // Enable tunnistamo login button by default.
    ->set('user_login_display', 'below')
    // Logout from openid connect provider by default.
    ->set('end_session_enabled', TRUE)
    // Do not map roles in openid_connect module.
    ->set('role_mappings', [])
    ->save();
}

/**
 * Enable logout support.
 */
function helfi_tunnistamo_update_9001() : void {
  Drupal::configFactory()
    ->getEditable('openid_connect.settings')
    ->set('end_session_enabled', TRUE)
    ->save();

  if (!Drupal::moduleHandler()->moduleExists('helfi_api_base')) {
    Drupal::service('module_installer')->install([
      'helfi_api_base',
    ]);
  }
}

/**
 * Convert previously autogenerated {sub}@localhost mails to {sub}@hel.fi.
 */
function helfi_tunnistamo_update_9003() : void {
  $query = \Drupal::database()
    ->select('users_field_data', 'u')
    ->fields('u', ['uid'])
    ->condition('mail', "%@localhost", 'LIKE');

  $users = $query->execute()->fetchAll();

  foreach ($users as $user) {
    if ((!$account = User::load($user->uid)) || !$account->getEmail()) {
      continue;
    }
    [$sub] = explode('@', $account->getEmail());
    $account->setEmail(helfi_tunnistamo_create_email(['sub' => $sub]))
      ->save();
  }
}

/**
 * UHF-X: Remove all openid_connect role mappings.
 *
 * Tunnistamo module has its own role mapping.
 *
 * @see \Drupal\helfi_tunnistamo\Plugin\OpenIDConnectClient\Tunnistamo::mapRoles()
 */
function helfi_tunnistamo_update_9004() : void {
  \Drupal::configFactory()
    ->getEditable('openid_connect.settings')
    ->set('role_mappings', [])
    ->save();
}
